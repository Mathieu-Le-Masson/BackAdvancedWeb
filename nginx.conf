events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server {
        listen 8080;
        server_name localhost;

        root /usr/share/nginx/html;

        location /authenticate {
            if ($request_method = OPTIONS) {
                return 204;
            }

            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;

            proxy_pass http://auth-service:3000/api/auth/authenticate;
        }

        location /api/auth/login {
            proxy_pass http://auth-service:3000/api/auth/login;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /api/auth/register {
            proxy_pass http://auth-service:3000/api/auth/register;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /api/auth/refresh-token {
                    proxy_pass http://auth-service:3000/api/auth/refresh-token;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
        }

        location /api/auth/ {
            auth_request /authenticate;

            proxy_pass http://auth-service:3000/api/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
        }

        location /api/users/ {
            auth_request /authenticate;

            proxy_pass http://auth-service:3000/api/users/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
        }

        location /api/restaurants/ {
            auth_request /authenticate;

            proxy_pass http://restaurant-service:3000/api/restaurants/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
        }

        location /api/articles/ {
                    auth_request /authenticate;

                    proxy_pass http://restaurant-service:3000/api/articles/;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header Authorization $http_authorization;
                }

        location /api/menus/ {
                    auth_request /authenticate;

                    proxy_pass http://restaurant-service:3000/api/menus/;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header Authorization $http_authorization;
                }

        location /api/restaurant-health/ {
            auth_request /authenticate;

            proxy_pass http://restaurant-service:3000/api/restaurant-health/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
        }

        location /api/order-health/ {
            auth_request /authenticate;

            proxy_pass http://orders-service:3000/api/order-health/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
        }

        location /api/auth-health/ {
                    proxy_pass http://auth-service:3000/api/auth-health/;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                }

        location /api/orders/ {
            proxy_pass http://orders-service:3000/api/orders/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
        }

        location /api/orderItems/ {
                    proxy_pass http://orders-service:3000/api/orderItems/;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header Authorization $http_authorization;
                }

        error_page 401 = @error401;
        location @error401 {
            add_header Content-Type application/json;
            return 401 '{"error": "Non authentifi√©", "message": "Veuillez vous connecter"}';
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}